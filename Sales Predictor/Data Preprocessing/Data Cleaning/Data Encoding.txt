Data Encoding:

from sklearn.preprocessing import OneHotEncoder
import pandas as pd
from sklearn.model_selection import train_test_split
# Import necessary libraries
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

df = pd.read_csv("cleaned_dataset.csv")

df = pd.DataFrame(df)

# Separate features and target
X = df[['Item_Identifier', 'Item_Fat_Content', 'Item_Type', 'Outlet_Identifier', 'Outlet_Size', 'Outlet_Location_Type', 'Outlet_Type']]
y = df['Item_Outlet_Sales']


# Initialize the OneHotEncoder
encoder = OneHotEncoder(sparse_output=False, drop='first')  # `drop='first'` removes the first category to avoid multicollinearity

# Fit and transform the features
X_encoded = encoder.fit_transform(X)

# Convert to DataFrame and add column names
encoded_df = pd.DataFrame(X_encoded, columns=encoder.get_feature_names_out(X.columns))

# Concatenate encoded features with target variable
df_encoded = pd.concat([encoded_df, y], axis=1)

#print(df_encoded)

# Save the encoded dataframe to a CSV file
df_encoded.to_csv("encoded_sales_data.csv", index=False)

#print("File saved as 'encoded_sales_data.csv'")